plugins {
    id 'nebula.release' version '13.0.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = 'hello.HelloWorld'

// tag::repositories[]
repositories {
    mavenCentral()
}
// end::repositories[]

// tag::jar[]
jar {
    baseName = 'hello-world-gradle'

}
// end::jar[]

// tag::dependencies[]
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "joda-time:joda-time:2.2"
}
// end::dependencies[]
//git.root=
//// tag::wrapper[]
//task wrapper(type: Wrapper) {
//    gradleVersion = '6.6'
//}
// end::wrapper[]
//ext.systemProperties= System.properties


task createReleaseCandidate (dependsOn: "prepareReleaseVersion") {
    doLast {
        exec {
            def relBranch
            new ByteArrayOutputStream().withStream { os ->
                def result = exec {
                    commandLine "bash", "-c", "echo step 3"
                    standardOutput = os
                }
                relBranch = os.toString().trim()
            }
            commandLine "bash", "-c", " echo Testing3"

        }
    }

}

    task prepareReleaseVersion (dependsOn: "createRCfromDevelop") {
        doLast {
            exec {
                def relBranch
                new ByteArrayOutputStream().withStream { os ->
                    def result = exec {
                        commandLine "bash", "-c", "echo step 2"
                        standardOutput = os
                    }
                    relBranch = os.toString().trim()
                }
                commandLine "bash", "-c", " echo Testing2"

            }
        }
    }
        task createRCfromDevelop() {
            doLast {
                exec {
                    def relBranch
                    new ByteArrayOutputStream().withStream { os ->
                        def result = exec {
                            commandLine "bash", "-c", "echo step 1"
                            standardOutput = os
                        }
                        relBranch = os.toString().trim()
                    }
                    commandLine "bash", "-c", " echo Testing1"

                }
            }
        }