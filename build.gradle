plugins {
    id 'nebula.release' version '13.0.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = 'hello.HelloWorld'

// tag::repositories[]
repositories {
    mavenCentral()
}
// end::repositories[]

// tag::jar[]
jar {
    baseName = 'hello-world-gradle'

}
// end::jar[]

// tag::dependencies[]
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "joda-time:joda-time:2.2"
}
// end::dependencies[]
//git.root=
//// tag::wrapper[]
//task wrapper(type: Wrapper) {
//    gradleVersion = '6.6'
//}
// end::wrapper[]
//ext.systemProperties= System.properties



task createReleaseCandidate(description: 'Create RC') {
    doLast {
        exec {
            def relBranch
            //println "System property ReleaseScope is" ${relScope}
            //String releaseScope = System.getProperty("ReleaseScope")
            //println "System property ReleaseScope is ${systemProperties.ReleaseScope}"
            //String releaseScope = System.getenv('ReleaseScope')
            new ByteArrayOutputStream().withStream { os ->
                def result = exec {
                    commandLine "bash", "-c", "./gradlew prepare | grep version | cut -f5 -d \" \" | cut -f1 -d \"-\""
                    standardOutput = os
                }
                relBranch = os.toString().trim()
            }
            println("Validate develop and create RC ${relBranch}")
            commandLine "bash", "-c", " echo Testing"
        }

        exec {
            //def releaseScope = "${params.ReleaseScope}"
            String releaseScope = System.getProperty("relScope")
            println("Execute release candidate task on the new branch"+ releaseScope)
            commandLine "bash", "-c", "echo Release is "+ releaseScope

        }
    }
}